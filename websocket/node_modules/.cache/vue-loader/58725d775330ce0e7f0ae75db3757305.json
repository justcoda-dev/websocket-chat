{"remainingRequest":"C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\src\\views\\MessengerBuilt.vue?vue&type=style&index=0&id=fd7b5b36&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\src\\views\\MessengerBuilt.vue","mtime":1643664714586},{"path":"C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\justc\\Desktop\\front\\WEB SOCKET\\websocket\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5tZXNzZW5nZXItYnVpbHQgew0KICBvdmVyZmxvdzogaGlkZGVuOw0KDQogICZfX2lubmVyIHsNCiAgICBkaXNwbGF5OiBncmlkOw0KICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0bzsNCiAgICBncmlkLWF1dG8tZmxvdzogY29sdW1uOw0KICAgIGhlaWdodDogMTAwdmg7DQogICAgZ3JpZC1nYXA6IDFweDsNCiAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHsNCiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0bzsNCiAgICB9DQoNCiAgICAubG9naW4tZm9ybSB7DQogICAgfQ0KDQogIH0NCg0KICAmX19jb250YWN0cy1iYXIgew0KICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkgew0KICAgICAgZGlzcGxheTogbm9uZTsNCiAgICB9DQogIH0NCg0KICAmX19tZXNzZW5nZXIgew0KDQogIH0NCg0KICAmX19zZWFyY2gtYmFyIHsNCiAgfQ0KfQ0K"},{"version":3,"sources":["MessengerBuilt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA","file":"MessengerBuilt.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"messenger-built\">\r\n    <!--    loading -->\r\n    <div class=\"messenger-built__inner\">\r\n      <MessengerContactsBar\r\n          @contactsBarItemClick=\"onContactsBarItemClick\"\r\n          @searchInput=\"onSearchInput\"\r\n          @arrowLeftClick=\"onArrowLeftClick\"\r\n          v-if=\"active.contactsBar\"\r\n          class=\"layout__contacts-bar\"\r\n          :contactUsersList=\"contactUsersSearchedList\"\r\n      />\r\n      <Messenger\r\n          v-if=\"objectNotEmpty(contactUserSendingTo)\"\r\n          :contactUserSendingTo=\"contactUserSendingTo\"\r\n          :messages=\"sortedMessages\"\r\n          :inputMessage=\"message\"\r\n          :burgerStatus=\"active.burgerStatus\"\r\n          @burgerButton=\"onBurgerButton\"\r\n          @messengerInput=\"onMessengerInput\"\r\n          @sendClick=\"onSendClick\"\r\n          @searchClick=\"onSearchClick\"\r\n          class=\"layout__messenger\"\r\n      />\r\n      <MessengerSearchBar\r\n          @arrowRightClick=\"onArrowRightClick\"\r\n          :messagesList=\"searchedMessages\"\r\n          @messagesSearchInput=\"onMessagesSearchInput\"\r\n          v-if=\"active.searchBar\"\r\n          class=\"layout__search-bar\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport Messenger from \"../components/messengerDisplay/Messenger\";\r\nimport MessengerContactsBar from \"../components/messengerContactsBar/MessengerContactsBar\";\r\nimport MessengerSearchBar from \"../components/messengerSearchBar/MessengerSearchBar\";\r\nimport {mapActions, mapGetters} from \"vuex\";\r\n\r\nexport default {\r\n  name: \"MessengerBuilt\",\r\n  components: {MessengerSearchBar, MessengerContactsBar, Messenger},\r\n  data: () => ({\r\n    active: {\r\n      searchBar: false,\r\n      contactsBar: true,\r\n      burgerStatus: false\r\n    },\r\n    message: '',\r\n  }),\r\n  computed: {\r\n    ...mapGetters([\r\n      \"typingStatus\",\r\n      \"contactUsersSearchedList\",\r\n      \"wsConnectionStatus\",\r\n      \"userId\",\r\n      \"contactUsersList\",\r\n      \"contactUserSendingTo\",\r\n      \"sortedMessages\",\r\n      \"searchedMessages\"\r\n    ]),\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      \"endTyping\",\r\n      \"startTyping\",\r\n      \"searchContactUsers\",\r\n      \"setWsUserFromStorage\",\r\n      \"sendMessage\",\r\n      \"connect\",\r\n      \"chooseContactToSend\",\r\n      \"setUserFromLocalStorage\",\r\n      \"searchAtContactUserMessages\"\r\n    ]),\r\n    onBurgerButton() {\r\n      this.active.contactsBar = true\r\n      this.active.burgerStatus = false\r\n    },\r\n    onArrowLeftClick() {\r\n      this.active.contactsBar = false\r\n      this.active.burgerStatus = true\r\n    },\r\n    onMessagesSearchInput(string) {\r\n      this.searchAtContactUserMessages(string)\r\n    },\r\n    objectNotEmpty(obj) {\r\n      return !!Object.keys(obj).length\r\n    },\r\n    onSearchInput(value) {\r\n      this.searchContactUsers({string: value, userId: this.userId})\r\n    },\r\n    onContactsBarItemClick(contactsUser) {\r\n      this.chooseContactToSend(contactsUser)\r\n    },\r\n    onSearchClick() {\r\n      this.active.searchBar = true\r\n    },\r\n    onArrowRightClick() {\r\n      this.active.searchBar = false\r\n    },\r\n    onSendClick() {\r\n      if (this.message.length >= 1) {\r\n        this.sendMessage({\r\n          userId: this.userId,\r\n          message: this.message,\r\n          toUser: this.contactUserSendingTo.userId\r\n        })\r\n      }\r\n      this.message = ''\r\n    },\r\n    onMessengerInput(value) {\r\n      this.message = value\r\n      if (this.message.length) {\r\n        this.startTyping({userId: this.userId, toUser: this.contactUserSendingTo.userId})\r\n        console.log(this.typingStatus)\r\n      } else {\r\n        this.endTyping({userId: this.userId, toUser: this.contactUserSendingTo.userId})\r\n      }\r\n    },\r\n    async userAuthIs() {\r\n      this.connect()\r\n      const userStorage = JSON.parse(localStorage.getItem(\"user\"))\r\n      if (userStorage) {\r\n        this.setUserFromLocalStorage(userStorage)\r\n        this.setWsUserFromStorage(userStorage)\r\n        await this.searchContactUsers({string: null, userId: this.userId})\r\n      } else {\r\n        console.log('not auth')\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    await this.userAuthIs()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.messenger-built {\r\n  overflow: hidden;\r\n\r\n  &__inner {\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    grid-auto-flow: column;\r\n    height: 100vh;\r\n    grid-gap: 1px;\r\n    @media (max-width: 600px) {\r\n      grid-template-columns: auto;\r\n    }\r\n\r\n    .login-form {\r\n    }\r\n\r\n  }\r\n\r\n  &__contacts-bar {\r\n    @media (max-width: 600px) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  &__messenger {\r\n\r\n  }\r\n\r\n  &__search-bar {\r\n  }\r\n}\r\n</style>\r\n"]}]}